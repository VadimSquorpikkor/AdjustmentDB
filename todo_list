!!! В списке событий на каждом событии писать, сколько дней длилось событие. На юните писать, сколько дней всего прошло со времени создания юнита
    При статусе "Завершение ремонта" у юнита добавлять дату его закрытия. Время юнита будет считаться до этой даты, если даты закрытия нет, то до сегодняшней даты

!!! updateUnitData, getNewEvent, saveData сделать частью DUnit

!!! для UnitInfoFragment сделать горизонтальный лэйаут — recycler не влазит в экран в горизонтальном положении


1. После добавления через Мульти сделать апдейт списка, а то значение в нём не обновляется после введения новых данных
2. Лисенер для "names"???
4. SaveUnitToDB — переделать, сейчас 2(!) overload метода с запутанным функционалом
5. Отвязать state_id от DUnit, всё брать из ивента. Как вариант в DUnit сделать DEvent event, для хранения последнего ивента. Через юнит сохранять новый ивент, закрывать старый (unit.addNewEvent(event, mViewModel))

1. во всех view классах поменять .getValue на подписку, чтобы значения ОТСЛЕЖИВАЛИСЬ, а не просто БРАЛИСЬ при старте или ещё по какой-нибудь команде
2. Аутентификация при каждом запуске заменить на: брать сохраненные данные и по ним получать профиль и локацию (чтоб каждый раз при запуске не всплывало сообщение об авторизации)
4. Когда доделаю инфо активити, то инфо панель на сингл сканере уже не будет нужна, можно выводить результат сканирования серез инфо активити
5. В элементы списка найденных устройств добавить поле "Локация"
6. Сделать горизонтальные лэйауты
7. При сканировании неправильного qr-кода вывести сообщение
8. Для распознавания: имена должны браться из БД (плюс ещё сделать сортировку по длине имени, чтобы сразу искался "6130С" и только потом "6130")

1. fragment_parent, fragment_parent_2, fragment_parent_3 одинаковые, есть смысл переделать в один